# Global dirs
data_gen_root_dpath := justfile_directory() / ".."
data_root_dpath := data_gen_root_dpath / ".."

# Input/source files
rules_markdown_source_path := data_gen_root_dpath / "Rules" / "Draw Steel Rules.md"
bestiary_markdown_source_path := data_gen_root_dpath / "Rules" / "Draw Steel Bestiary.md"
adventure_dir_markdown_source_path := data_gen_root_dpath / "Adventures"

# Staging dirs
staging_dpath := data_root_dpath / "staging"

clean_and_prep:
    #!/usr/bin/env bash
    set -euo pipefail
    if [ -d "{{staging_dpath}}" ]; then
        rm -rf "{{staging_dpath}}"
    fi
    mkdir -p "{{staging_dpath}}"

gen: clean_and_prep gen_rules gen_bestiary
    # TODO - unified
    # TODO - moving adventures out of rules and into separate execution
    #cp -R "{{data_gen_root_dpath}}/Adventures" "$dest_dir"

gen_rules:
    just -f rules.justfile gen_rules

gen_bestiary:
    just -f bestiary.justfile gen_bestiary

# deletes all the (non-hidden) files in a directory
_delete_dir_except_git dir_to_delete:
    #!/usr/bin/env bash
    set -euo pipefail
    tempdir="$(mktemp -d)"
    echo "$tempdir"
    # add a dummy file to avoid crashing in case the dir is empty
    touch "{{dir_to_delete}}/dummy.txt"
    mv "{{dir_to_delete}}"/* "${tempdir}/"
    # by default dotglob will prevent hidden files from being included in * wildcard globs
    if [ -d "${tempdir}/.git" ]; then
        mv "${tempdir}/.git" "{{dir_to_delete}}"
    fi
    rm -rf "$tempdir"
